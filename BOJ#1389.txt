#include <cstdio>
#include <vector>
#include <queue>
using namespace std;

int kevin[101];
vector<int> v[101];
queue<pair<int, int>> q;
bool visit[101];

void bfs(int num) {
	int cnt = 0;
	for (int i = 0; i < v[num].size(); i++) {
		if(!visit[v[num][i]]) q.push(pair<int, int>(v[num][i], 1));
		visit[v[num][i]] = true;
	}
	int temp1;
	int	temp2;
	while (!q.empty()) {
		temp1 = q.front().first;
		temp2 = q.front().second;
		cnt += temp2;
		q.pop();
		for (int i = 0; i < v[temp1].size(); i++) {
			if (!visit[v[temp1][i]]) {
				q.push(pair<int, int>(v[temp1][i], temp2 + 1));
				visit[v[temp1][i]] = true;
			}
		}
	}
	kevin[num] = cnt;
}

int main(void) {

	int n, m;
	scanf_s("%d %d", &n, &m);
	int num1, num2;
	for (int i = 0; i < m; i++) {
		scanf_s("%d %d", &num1, &num2);
		v[num1].push_back(num2);
		v[num2].push_back(num1);
	}
	for (int i = 1; i <= n; i++) {
		visit[i] = true;
		bfs(i);

		// clear
		for (int j = 1; j <= n; j++) {
			visit[j] = false;
		}
	}

	int min = kevin[1];
	int idx = 1;
	for (int i = 2; i <= n; i++) {
		if (kevin[i] < min) { min = kevin[i], idx = i; }
	}
	printf("%d", idx);

	return 0;
}
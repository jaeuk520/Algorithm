#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <queue>
using namespace std;

int min(int a, int b) {
    if(a < b) return a;
    return b;
}

int max(int a, int b) {
    if(a > b) return a;
    return b;
}

bool compare(vector<int> v1, vector<int> v2) {
    int a = max(v1[0], v1[1]);
    int b = max(v2[0], v2[1]);
    return a > b;
}

int solution(vector<vector<int>> sizes) {
    int answer = 0;
    
    sort(sizes.begin(), sizes.end(), compare);
    
    int max_num = max(sizes[0][0], sizes[0][1]);
    priority_queue<int, vector<int>, less<int>> pq;
    pq.push(min(sizes[0][0], sizes[0][1]));
    
    int m;
    for(int i=1; i<sizes.size(); i++) {
        m = min(sizes[i][0], sizes[i][1]);
        pq.push(m);
    }
    
    return max_num * pq.top();
}
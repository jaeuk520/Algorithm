// struct ListNode {
//     int val;
//     ListNode *next;
//     ListNode() : val(0), next(nullptr) {}
//     ListNode(int x) : val(x), next(nullptr) {}
//     ListNode(int x, ListNode *next) : val(x), next(next) {}
// };

using namespace std;
 
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* dummy = new ListNode(0);
        ListNode* tail = dummy;
        int prev = 0;

        while((l1 != nullptr) || (l2 != nullptr)) {
            int num1 = (l1 != nullptr) ? l1->val : 0;
            int num2 = (l2 != nullptr) ? l2->val : 0;
            int sum = num1 + num2;

            int q = (sum + prev) / 10;
            int rem = (sum + prev) % 10;

            ListNode* listNode = new ListNode(0);

            listNode->val = rem;

            tail->next = listNode;
            tail = listNode;

            prev = q;

            l1 = (l1 != nullptr) ? l1->next : nullptr;
            l2 = (l2 != nullptr) ? l2->next : nullptr;
        }
        if(prev != 0) {
            ListNode* listNode = new ListNode(0);
            listNode->val = prev;
            tail->next = listNode;
            tail = listNode;
        }
        ListNode* result = dummy->next;
        delete dummy;
        return result;
    }
};
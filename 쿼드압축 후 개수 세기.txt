#include <string>
#include <vector>
#include <map>
#include <iostream>
using namespace std;

vector<vector<int>> v;
map<int, int> m;

void compress(int x, int y, int len) {
    int num;
    
    if(len == 1) {
        m[v[x][y]]++;
        return;
    }
    
    for(int i=0; i<len; i++) {
        for(int j=0; j<len; j++) {
            if((i==0) && (j==0)) {
                num = v[x+i][y+j];
                continue;
            }
            if(v[x+i][y+j] != num) {
                compress(x, y, len/2);
                compress(x, y + len/2, len/2);
                compress(x + len/2, y, len/2);
                compress(x + len/2, y + len/2, len/2);
                return;
            }
            if(((i == len - 1) && (j == len - 1)) && v[x+i][y+j] == num)  {
                m[num]++;
                return;
            }
        }
    }
}

vector<int> solution(vector<vector<int>> arr) {
    v = arr;
    vector<int> answer;
    
    int len = arr.size();
    
    compress(0, 0, len);
    
    answer.push_back(m[0]);
    answer.push_back(m[1]);
    
    return answer;
}
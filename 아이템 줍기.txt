#include <string>
#include <vector>
#include <iostream>
#include <queue>
using namespace std;

int map[101][101];
int dx[4] = {-1, 1, 0, 0};
int dy[4] = {0, 0, 1, -1};
bool visit[101][101];

int len = 0;

int bfs(int x, int y, int itemX, int itemY) {
    
    queue<pair<int,int>> q;
    q.push(make_pair(x,y));
    visit[x][y] = true;
    
    while(!q.empty()) {
        
        int size = q.size();
        
        for(int i=0; i<size; i++) {
            int x = q.front().first;
            int y = q.front().second;
            q.pop();
            
            for(int j=0; j<4; j++) {
                if(x + dx[j] < 1 || x + dx[j] > 100 
                   || y + dy[j] < 1 || y + dy[j] > 100) continue;
                if(visit[x+dx[j]][y+dy[j]]) continue;
                
                if(map[x+dx[j]][y+dy[j]] == 1) {
                    visit[x+dx[j]][y+dy[j]] = true;
                    q.push(make_pair(x+dx[j], y+dy[j]));
                    if((x+dx[j] == itemX) && (y+dy[j] == itemY)) return ++len;
                }
            }
        }
        len++;
    }
    return len;
}

int solution(vector<vector<int>> rectangle, int characterX, int characterY, int itemX, int itemY) {
    int answer = 0;
    
    characterX *= 2;
    characterY *= 2;
    itemX *= 2;
    itemY *= 2;
    
    for(int i=1; i<=100; i++) {
        for(int j=1; j<=100; j++) {
            map[i][j] = -1;
        }
    }
    
    for(int i=0; i<rectangle.size(); i++) {
        for(int j=0; j<rectangle[i].size(); j++) {
            rectangle[i][j] *= 2;
        }
    }
    
    for(vector<int> v: rectangle) {
        
        int x1 = v[0];
        int y1 = v[1];
        int x2 = v[2];
        int y2 = v[3];
        
        for(int i=x1; i<=x2; i++) {
            for(int j=y1; j<=y2; j++) {
                map[i][j] = 1;
            }
        }
    }
    
    for(vector<int> v: rectangle) {
        
        int x1 = v[0] + 1;
        int y1 = v[1] + 1;
        int x2 = v[2] - 1;
        int y2 = v[3] - 1;
        
        for(int i=x1; i<=x2; i++) {
            for(int j=y1; j<=y2; j++) {
                map[i][j] = 0;
            }
        }
    }
    
    len = bfs(characterX, characterY, itemX, itemY);
    
    
    return len/2;
}
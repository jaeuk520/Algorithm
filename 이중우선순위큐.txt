#include <string>
#include <vector>
#include <queue>
#include <unordered_map>
using namespace std;

unordered_map<int, int> m;

vector<int> solution(vector<string> operations) {
    vector<int> answer;
    
    priority_queue<int, vector<int>, greater<int>> pq_greater;
    priority_queue<int, vector<int>, less<int>> pq_less;
    
    int total = 0;
    
    for(string str: operations) {
        char c = str[0];
        long long num = stol(str.substr(2));
        
        if(c == 'I') {
            pq_greater.push(num);
            pq_less.push(num);
            total++;
            m[num]++;
        } else {
            if(total == 0) continue;
            if(num == 1) {
                m[pq_less.top()]--;
                pq_less.pop();
            }
            else if(num == -1) {
                m[pq_greater.top()]--;
                pq_greater.pop();
            }
            total--;
        }
    }
    
    if(total == 0) {
        answer.push_back(0); answer.push_back(0);
        return answer;
    }
    
    for(int i=0; i<pq_less.size(); i++) {
        if(m[pq_less.top()] < 1) {
            pq_less.pop();
            continue;
        }
        answer.push_back(pq_less.top());
        break;
    }
    for(int i=0; i<pq_greater.size(); i++) {
        if(m[pq_greater.top()] < 1) {
            pq_greater.pop();
            continue;
        }
        answer.push_back(pq_greater.top());
        break;
    }
    
    return answer;
}
#include <stdio.h>
#include <math.h>
#include <vector>
#define MAX 1000000000;
using namespace std;
const long long INF = 1e18;

vector<int> x;
int N;

long long distance(int r) {
	long long sum = 0;
	for (int i = 1; i < N; i++) {
		sum += abs(x[i] - i * r * 1LL);
	}
	return sum;
}

int main(void) {

	int num;
	scanf_s("%d", &N);
	for (int i = 0; i < N; i++) {
		scanf_s("%d", &num);
		x.push_back(num);
	}
	int lo = 0;
	int hi = x[N-1];
	long long ans = INF;
	int p, q;
	long long p_len, q_len;
	while (hi - lo >= 3) {
		p = (2 * lo + hi) / 3;
		q = (lo + 2 * hi) / 3;

		p_len = distance(p);
		q_len = distance(q);

		if (p_len < q_len) {
			hi = q;
		} 
		else {
			lo = p;
		}
	}
	for (int i = lo; i <= hi; i++) {
		ans = min(distance(i), ans);
	}
	
	printf("%lld", ans);

	return 0;
}
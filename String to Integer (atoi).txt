class Solution {
public:
    int myAtoi(string s) {
        
        //step 1
        int idx=0;
        for(int i=0; i<s.length(); i++) {
            if(s[i] != ' ' && s[i] != '\n') {
                idx = i;
                break;
            }
        }
        s = s.substr(idx);
        
        //step 2
        bool isNat = true;
        if(s[0] == '-') {
            isNat = false;
            s = s.substr(1);
        } else if(s[0] == '+') {
            s = s.substr(1);
        }

        //step 3
        idx = s.length();
        for(int i=0; i<s.length(); i++) {
            if((s[i] - '0' < 0) || (s[i] - '0' > 9)) {
                idx = i;
                break;
            }
        }
        s = s.substr(0, idx);

        //step 4
        idx = 0;
        for(int i=0; i<s.length(); i++) {
            if((s[i] - '0' > 0) && (s[i] - '0' <= 9)) {
                idx = i;
                break;
            }
        }
        s = s.substr(idx);

        //string to int
        long long sum = 0;
        for(int i=0; i<s.length(); i++) {
            if(isNat && 
                (s[s.length()-1-i] - '0') * pow(10, i) > INT_MAX) return INT_MAX;
            if(!isNat && 
                (s[s.length()-1-i] - '0') * pow(10, i) > INT_MAX) return INT_MIN;
            sum += (s[s.length()-1-i] - '0') * pow(10, i);
        }

        if(!isNat) sum *= -1;

        //step 5
        if(sum > INT_MAX) sum = INT_MAX;
        else if(sum < INT_MIN) sum = INT_MIN;

        return sum;
    }
};
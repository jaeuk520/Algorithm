#include <cstdio>
#include <vector>
#include <queue>
using namespace std;

int box[100][100][100];
queue<pair<pair<int, int>, int>> q;
int day;
int dx[6] = { 0, 1, 0, -1, 0, 0 }; //북, 동, 남, 서, 상, 하
int dy[6] = { 1, 0, -1, 0, 0, 0 };
int dh[6] = { 0, 0, 0, 0, 1, -1 };
int cnt;
bool zero = false;
int cnt_min1 = 0;

void bfs(int m, int n, int h) {
	if (q.empty()) return;

	int ddx;
	int ddy;
	int ddh;

	while (!q.empty()) {
		day++;
		int size = q.size();
		for (int i = 0; i < size; i++) {
			pair<pair<int, int>, int > p;
			p = q.front();
			q.pop(); cnt++;
			for (int j = 0; j < 6; j++) {
				ddh = p.first.first + dh[j];
				ddx = p.first.second + dx[j];
				ddy = p.second + dy[j];
				if (ddh < 0 || ddh >= h || ddx < 0 || ddx >= n || ddy < 0 || ddy >= m) continue;
				if (box[ddh][ddx][ddy] == 0) {
					box[ddh][ddx][ddy] = 1;
					q.push(pair<pair<int, int>, int>(pair<int, int>(ddh, ddx), ddy));
				}
			}
		}
	}
	day--;
}

int main(void) {

	int m, n, h; 
	int temp;
	scanf_s("%d %d %d", &m, &n, &h);
	for (int i = 0; i < h; i++) {
		for (int j = 0; j < n; j++) {
			for (int k = 0; k < m; k++) {
				scanf_s("%d", &temp);
				box[i][j][k] = temp;
				if (temp == 1) {
					q.push(pair<pair<int, int>, int>(pair<int, int>(i, j), k));
				}
				else if (temp == 0) zero = true;
				else if (temp == -1) cnt_min1++;
			}
		}
	}

	if (q.empty()) printf("-1");
	else {
		int size = m * n * h - cnt_min1;
		if (!zero) {
			printf("0"); return 0;
		}
		else {
			bfs(m, n, h); 
			if (cnt != size) printf("-1");
			else if (cnt == size) printf("%d", day);
		}
	}

	system("pause");
	return 0;
}
#include <string>
#include <vector>
using namespace std;

long long dp[501][501];

int max(int a, int b) {
    if(a>b) return a;
    return b;
}

int solution(vector<vector<int>> triangle) {
    int answer = 0;
    
    if(triangle.size() == 1) return triangle[0][0];
    
    dp[0][0] = triangle[0][0];
    
    dp[1][0] = dp[0][0] + triangle[1][0];
    dp[1][1] = dp[0][0] + triangle[1][1];
    
    
    for(int i=2; i<triangle.size(); i++) {
        for(int j=0; j<=i; j++) {
            if(j==0) {
                dp[i][j] = triangle[i][j] + dp[i-1][j];
            } else if(j==i) {
                dp[i][j] = triangle[i][j] + dp[i-1][j-1];
            } else {
                dp[i][j] = triangle[i][j] + max(dp[i-1][j-1], dp[i-1][j]);
            }
        }
    }

    for(int i=0; i<triangle.size(); i++) {
        answer = max(answer, dp[triangle.size()-1][i]);
    }
    
    return answer;
}
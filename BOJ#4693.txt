#include <cstdio>
#include <iostream>
#include <vector>
using namespace std;

vector<char> map[50];
bool visit[50][50];

void dfs(int x, int y, int w, int h) {
	if (visit[x][y]) return;
	visit[x][y] = true;
	//아래
	if (x + 1 <= h - 1) {
		if (!visit[x + 1][y] && map[x + 1][y] == '1') dfs(x + 1, y, w, h);
	}
	//남동
	if (x + 1 <= h - 1 && y + 1 <= w - 1) {
		if (!visit[x + 1][y + 1] && map[x + 1][y + 1] == '1') dfs(x + 1, y + 1, w, h);
	}
	//동
	if (y + 1 <= w - 1) {
		if (!visit[x][y + 1] && map[x][y + 1] == '1') dfs(x, y + 1, w, h);
	}
	//서
	if (y - 1 >= 0) {
		if (!visit[x][y - 1] && map[x][y - 1] == '1') dfs(x, y - 1, w, h);
	}
	//남서
	if (y - 1 >= 0 && x + 1 <= h - 1) {
		if (!visit[x + 1][y - 1] && map[x + 1][y - 1] == '1') dfs(x + 1, y - 1, w, h);
	}
	//북서
	if (x - 1 >= 0 && y + 1 <= w - 1) {
		if (!visit[x - 1][y + 1] && map[x - 1][y + 1] == '1') dfs(x - 1, y + 1, w, h);
	}
	//북
	if (x - 1 >= 0) {
		if (!visit[x - 1][y] && map[x - 1][y] == '1') dfs(x - 1, y, w, h);
	}
	//동북
	if (y - 1 >= 0 && x - 1 >= 0) {
		if (!visit[x - 1][y - 1] && map[x - 1][y - 1] == '1') dfs(x - 1, y - 1, w, h);
	}
	
}

int main(void) {

	while (1) {
		int w, h;
		char land;
		int count = 0;
		scanf_s("%d %d", &w, &h);
		if (w == 0 && h == 0) {
			break;
		}
		else {
			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					cin >> land;
					map[i].push_back(land);
					visit[i][j] = false;
				}
			}
			//dfs
			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					if (!visit[i][j] && map[i][j] == '1') {
						dfs(i, j, w, h);
						count++;
					}
				}
			}
			printf("%d\n", count);
			// 초기화
			for (int i = 0; i < h; i++) { map[i].clear(); }
		}
	}

	return 0;
}
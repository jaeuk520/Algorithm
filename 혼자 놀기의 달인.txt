#include <string>
#include <vector>
#include <queue>
#include <iostream>
using namespace std;

bool visit[101];
int cnt = 0;

void dfs(vector<int> cards, int idx) {
    int num = cards[idx];
    cnt++;
    
    if(!visit[num]) {
        visit[num] = true;
        return dfs(cards, --num);
    }
    
}

int solution(vector<int> cards) {
    int answer = 0;
    
    priority_queue <int, vector<int>, less<int>> pq;
    
    for(int i=0; i<cards.size(); i++) {
        if(!visit[cards[i]]) {
            visit[cards[i]] = true;
            dfs(cards, --cards[i]);
            pq.push(cnt);
            cnt = 0;
        }
    }
    
    if(pq.size() == 1) return 0;
    
    int x = pq.top();
    pq.pop();
    int y = pq.top();
    
    return x * y;
}
#include <iostream>
#include <utility>
#include <math.h>
using namespace std;

int a[2], b[2], c[2], d[2];
typedef pair<double, double> co;

co minho(double p) {
	return { a[0] - (a[0] - b[0]) * p / 10000, a[1] - (a[1] - b[1]) * p / 10000 };
}

co kangho(double p) {
	return { c[0] - (c[0] - d[0]) * p / 10000, c[1] - (c[1] - d[1]) * p / 10000 };
}

int main(void) {

	cin >> a[0] >> a[1] >> b[0] >> b[1] >> c[0] >> c[1] >> d[0] >> d[1];
	double lo = 0;
	double hi = 10000;
	double p, q, p_len, q_len;
	double ans = 2 * 10e4;
	while (hi - lo >= 1e-6) {
		p = (2 * lo + hi) / 3;
		q = (lo + 2 * hi) / 3;

		co m_p = minho(p);
		co m_q = minho(q);
		co k_p = kangho(p);
		co k_q = kangho(q);

		p_len = pow(m_p.first - k_p.first, 2) + pow(m_p.second - k_p.second, 2);
		q_len = pow(m_q.first - k_q.first, 2) + pow(m_q.second - k_q.second, 2);

		p_len = sqrt(p_len);
		q_len = sqrt(q_len);

		ans = min(ans, min(p_len, q_len));

		if (p_len >= q_len) {
			lo = p;
		}
		else {
			hi = q;
		}
	}
	cout.setf(ios::fixed);
	cout.precision(10);
	cout << ans;

	return 0;
}